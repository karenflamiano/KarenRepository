//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TemperatureConverter.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ConvertTemperatureSoap")]
    public interface ConvertTemperatureSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CelciusToFahrenheit", ReplyAction="*")]
        double CelciusToFahrenheit(double celcius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CelciusToFahrenheit", ReplyAction="*")]
        System.Threading.Tasks.Task<double> CelciusToFahrenheitAsync(double celcius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CelciusToKelvin", ReplyAction="*")]
        double CelciusToKelvin(double celcius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CelciusToKelvin", ReplyAction="*")]
        System.Threading.Tasks.Task<double> CelciusToKelvinAsync(double celcius);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FahrenheitToCelcius", ReplyAction="*")]
        double FahrenheitToCelcius(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FahrenheitToCelcius", ReplyAction="*")]
        System.Threading.Tasks.Task<double> FahrenheitToCelciusAsync(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FahrenheitToKelvin", ReplyAction="*")]
        double FahrenheitToKelvin(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FahrenheitToKelvin", ReplyAction="*")]
        System.Threading.Tasks.Task<double> FahrenheitToKelvinAsync(double fahrenheit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KelvinToCelcius", ReplyAction="*")]
        double KelvinToCelcius(double kelvin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KelvinToCelcius", ReplyAction="*")]
        System.Threading.Tasks.Task<double> KelvinToCelciusAsync(double kelvin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KelvinToFahrenheit", ReplyAction="*")]
        double KelvinToFahrenheit(double kelvin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/KelvinToFahrenheit", ReplyAction="*")]
        System.Threading.Tasks.Task<double> KelvinToFahrenheitAsync(double kelvin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ConvertTemperatureSoapChannel : TemperatureConverter.ServiceReference1.ConvertTemperatureSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConvertTemperatureSoapClient : System.ServiceModel.ClientBase<TemperatureConverter.ServiceReference1.ConvertTemperatureSoap>, TemperatureConverter.ServiceReference1.ConvertTemperatureSoap {
        
        public ConvertTemperatureSoapClient() {
        }
        
        public ConvertTemperatureSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConvertTemperatureSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConvertTemperatureSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConvertTemperatureSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double CelciusToFahrenheit(double celcius) {
            return base.Channel.CelciusToFahrenheit(celcius);
        }
        
        public System.Threading.Tasks.Task<double> CelciusToFahrenheitAsync(double celcius) {
            return base.Channel.CelciusToFahrenheitAsync(celcius);
        }
        
        public double CelciusToKelvin(double celcius) {
            return base.Channel.CelciusToKelvin(celcius);
        }
        
        public System.Threading.Tasks.Task<double> CelciusToKelvinAsync(double celcius) {
            return base.Channel.CelciusToKelvinAsync(celcius);
        }
        
        public double FahrenheitToCelcius(double fahrenheit) {
            return base.Channel.FahrenheitToCelcius(fahrenheit);
        }
        
        public System.Threading.Tasks.Task<double> FahrenheitToCelciusAsync(double fahrenheit) {
            return base.Channel.FahrenheitToCelciusAsync(fahrenheit);
        }
        
        public double FahrenheitToKelvin(double fahrenheit) {
            return base.Channel.FahrenheitToKelvin(fahrenheit);
        }
        
        public System.Threading.Tasks.Task<double> FahrenheitToKelvinAsync(double fahrenheit) {
            return base.Channel.FahrenheitToKelvinAsync(fahrenheit);
        }
        
        public double KelvinToCelcius(double kelvin) {
            return base.Channel.KelvinToCelcius(kelvin);
        }
        
        public System.Threading.Tasks.Task<double> KelvinToCelciusAsync(double kelvin) {
            return base.Channel.KelvinToCelciusAsync(kelvin);
        }
        
        public double KelvinToFahrenheit(double kelvin) {
            return base.Channel.KelvinToFahrenheit(kelvin);
        }
        
        public System.Threading.Tasks.Task<double> KelvinToFahrenheitAsync(double kelvin) {
            return base.Channel.KelvinToFahrenheitAsync(kelvin);
        }
    }
}
